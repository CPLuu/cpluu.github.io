---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro'

export async function getStaticPaths() {
    // returns an array of page routes, and all of the pages at those routes will use the same template defined in the file
  const allPosts = await Astro.glob('../posts/*.md'); // return info on all md files, structured within allPosts

  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())]; // parse all markdown for tags to make big set, keep unique val, convert set to array

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag }, // return list of obj containing param tag and related, desired props
      props: { posts: filteredPosts },
    };
  });

//   return [ // list of routes that we want as an array, each row has tag param and props of posts
//     {params: {tag: "astro"}, props: {posts: allPosts}},
//     {params: {tag: "successes"}, props: {posts: allPosts}},
//     {params: {tag: "community"}, props: {posts: allPosts}},
//     {params: {tag: "blogging"}, props: {posts: allPosts}},
//     {params: {tag: "setbacks"}, props: {posts: allPosts}},
//     {params: {tag: "learning in public"}, props: {posts: allPosts}}
//   ]
}

// collecting the tag and posts as variable
const { tag } = Astro.params;
const { posts } = Astro.props;

// where did 'post' come from
// const filteredPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag)); //Filter your list of posts to only include posts that contain the pageâ€™s own tag
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>


<!-- Create page automatically based on dynamic routing, with props passed to each route,
    JS automatically filter for param (eg tag) what we want danymic routing for -->